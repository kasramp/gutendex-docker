name: Build and deploy
on:
  push:
    branches:
      - master
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    - name: Install Hadolint
      run: |
        curl -sSL https://github.com/hadolint/hadolint/releases/latest/download/hadolint-Linux-x86_64 -o /usr/local/bin/hadolint
        chmod +x /usr/local/bin/hadolint
    - name: Lint Dockerfile
      run: hadolint Dockerfile
    - name: Update release version file
      shell: bash
      run: |
        chmod +x "${GITHUB_WORKSPACE}/update_release_version.sh"
        ./${GIHUB_WORKSPACE}/update_release_version.sh
        echo "TAGGED_VERSION<<EOF" >> $GITHUB_OUTPUT
        echo "$(cat ./version.txt)" >> $GITHUB_OUTPUT
        echo "EOF" >> $GITHUB_OUTPUT
      id: version
    - name: Build and push Docker image
      shell: bash
      env:
        TAGGED_VERSION: ${{ steps.version.outputs.TAGGED_VERSION }}
        EMAIL: ${{ secrets.EMAIL }}
        USERNAME: ${{ secrets.USERNAME }}
        TOKEN: ${{ secrets.GITHUB_TOKEN }}
        DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
        DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
      run: |
        echo "Tag version is $TAGGED_VERSION"
        chmod +x "${GITHUB_WORKSPACE}/util/release.sh"
        bash "${GITHUB_WORKSPACE}/util/release.sh"
    - name: Deploy to production
      shell: bash
      env:
        TAGGED_VERSION: ${{ steps.version.outputs.TAGGED_VERSION }}
        DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
        DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        WEBHOOK_TOKEN: ${{ secrets.WEBHOOK_TOKEN }}
      run: |
        pwd ${GITHUB_WORKSPACE}
        chmod +x "${GITHUB_WORKSPACE}/util/webhook_deploy.sh"
        ./${GIHUB_WORKSPACE}/util/webhook_deploy.sh